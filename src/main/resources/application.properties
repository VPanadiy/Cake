server.port=8000
#
#server.ssl.key-store=file://mykeys.jks
#server.ssl.key-store-password=root
#server.ssl.key-password=root

#spring.datasource.url=jdbc:postgresql://localhost:5432/Cake
spring.datasource.url=jdbc:postgresql:Cake
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver

#spring.thymeleaf.cache=false

spring.main.banner-mode=LOG
management.context-path=/mgmt

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.enable_lazy_load_no_trans = true
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext


# LOGGING (ThymeleafAutoConfiguration)
#logging.path=/build/logs/
#logging.file=BookWorm.log
logging.level.*=INFO
#logging.level.root.org.springframework.security=DEBUG
#logging.config=src/main/resources/logback.xml

logging.level.org.springframework.web=INFO
logging.level.guru.springframework.blogs.controllers=INFO
logging.level.org.hibernate=ERROR
logging.file=logs/spring-boot-logging.log


# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
#charset=<encoding> is added
spring.thymeleaf.content-type=text/html
# set to false for hot refresh
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email, password, active from users where email=?
spring.queries.roles-query=select u.email, r.role from users u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?


#Configuration-Properties
#if l don't used String or list i used amazon.associateId[0], amazon.associateId[1]   
amazon.associateId=habuma-changed-in-file(application.properties)
